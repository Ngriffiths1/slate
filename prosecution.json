{
  "swagger" : "2.0",
  "x-sortMethodsBy" : [ "path", "operation" ],
  "info" : {
    "title" : "CHIPS API",
    "description" : "This API accesses CHIPS to retrieve data to create a case",
    "version" : "1.0.0"
  },
  "schemes" : [ "http" ],
  "parameters" : {
    "offsetParam" : {
      "in" : "query",
      "name" : "offset",
      "required" : false,
      "type" : "integer",
      "minimum" : 0,
      "description" : "The number of items to skip before starting to collect to the collect result set."
    },
    "limitParam" : {
      "in" : "query",
      "name" : "limit",
      "required" : false,
      "type" : "integer",
      "minimum" : 1,
      "maximum" : 50,
      "default" : 20,
      "description" : "The number of items to return."
    }
  },
  "basePath" : "/internal/company/{company_number}",
  "paths" : {
    "/" : {
      "get" : {
        "summary" : "getCompanyDetailsByCompanyNumber",
        "x-operationName" : "Get",
        "description" : "Return company details for a specific company number",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "company_number",
          "in" : "path",
          "required" : true,
          "description" : "The company number",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return details for a company",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "Company not found"
          }
        }
      }
    },
    "/appointments" : {
      "get" : {
        "summary" : "getAppointmentsForCompany",
        "x-operationName" : "Get",
        "description" : "Return appointment details for a company",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "$ref" : "#/parameters/offsetParam"
        }, {
          "$ref" : "#/parameters/limitParam"
        }, {
          "in" : "query",
          "name" : "date",
          "description" : "The date to be used to identify the appointments for the company at a specific date",
          "required" : true,
          "type" : "string",
          "format" : "date"
        }, {
          "in" : "query",
          "name" : "appointment-type",
          "description" : "The appointment type determines which appointment types are returned for the registers view.",
          "type" : "string",
          "enum" : [ "secretaries", "directors", "llp-members", "llp-designated-member", "general-partner", "limited-partner", "eeig-member", "authorised-to-accept", "authorised-to-represent", "authorised-to-represent-and-accept", "cic-manager", "receiver-and-manager", "judicial-factor", "administrative-organ", "supervisory-organ", "management-organ", "blank", "individual-psc", "rle-psc", "legal-person-psc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a list of appointments",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Appointment"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "No appointments found"
          }
        }
      }
    },
    "/appointments/range" : {
      "get" : {
        "summary" : "getAppointmentsForCompanyInDateRange",
        "x-operationName" : "Get",
        "description" : "Get officers that were in post at the company at any point between the start date and the end date",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "$ref" : "#/parameters/offsetParam"
        }, {
          "$ref" : "#/parameters/limitParam"
        }, {
          "in" : "query",
          "name" : "startDate",
          "description" : "The starting date of the time period",
          "required" : true,
          "type" : "string",
          "format" : "date"
        }, {
          "in" : "query",
          "name" : "endDate",
          "description" : "The ending date of the time period",
          "required" : true,
          "type" : "string",
          "format" : "date"
        }, {
          "in" : "query",
          "name" : "appointment-type",
          "description" : "The appointment type determines which appointment types are returned for the registers view.",
          "required" : false,
          "type" : "string",
          "enum" : [ "secretaries", "directors", "llp-members", "llp-designated-member", "general-partner", "limited-partner", "eeig-member", "authorised-to-accept", "authorised-to-represent", "authorised-to-represent-and-accept", "cic-manager", "receiver-and-manager", "judicial-factor", "administrative-organ", "supervisory-organ", "management-organ", "blank", "individual-psc", "rle-psc", "legal-person-psc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a list of appointments",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Appointment"
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          },
          "404" : {
            "description" : "No appointments found"
          }
        }
      }
    },
    "/appointments/{appointment_number}" : {
      "get" : {
        "summary" : "getAppointmentById",
        "x-operationName" : "Get",
        "description" : "Returns officer appointment details",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "appointment_number",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the officer appointment",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns officer appointment details",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Appointment"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "Officer not found"
          }
        }
      }
    },
    "/accounting-periods" : {
      "get" : {
        "summary" : "getAccountingPeriods",
        "x-operationName" : "Get",
        "description" : "Return accounting periods for a company",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "$ref" : "#/parameters/offsetParam"
        }, {
          "$ref" : "#/parameters/limitParam"
        }, {
          "in" : "query",
          "name" : "filing-status",
          "type" : "string",
          "description" : "A search option to narrow down the accounting periods returned - options include filed, missing and all",
          "required" : false
        }, {
          "in" : "query",
          "name" : "start-on",
          "type" : "string",
          "format" : "date",
          "description" : "The earliest date of the range to search for accounting periods",
          "required" : false
        }, {
          "in" : "query",
          "name" : "end-on",
          "type" : "string",
          "format" : "date",
          "description" : "The last date of the range to search for accounting periods",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a list of accounting periods",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountingPeriod"
              }
            }
          },
          "404" : {
            "description" : "accounting periods not found"
          }
        }
      }
    },
    "/annual-return-periods" : {
      "get" : {
        "summary" : "getAnnualReturnPeriods",
        "x-operationName" : "Get",
        "description" : "Return annual return periods for a company",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "$ref" : "#/parameters/offsetParam"
        }, {
          "$ref" : "#/parameters/limitParam"
        }, {
          "in" : "query",
          "name" : "filing-status",
          "type" : "string",
          "description" : "A search option to narrow down the acnnual return periods returned - options include filed, missing and all",
          "required" : false
        }, {
          "in" : "query",
          "name" : "start-on",
          "type" : "string",
          "format" : "date",
          "description" : "The earliest date of the range to search for annual return periods",
          "required" : false
        }, {
          "in" : "query",
          "name" : "end-on",
          "type" : "string",
          "format" : "date",
          "description" : "The last date of the range to search for annual return periods",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a list of annual return periods",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AnnualReturnPeriod"
              }
            }
          },
          "404" : {
            "description" : "annual return periods not found"
          }
        }
      }
    },
    "/confirmation-statement-periods" : {
      "get" : {
        "summary" : "getConfirmationStatementPeriods",
        "x-operationName" : "Get",
        "description" : "Return confirmation statement periods for a company",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "$ref" : "#/parameters/offsetParam"
        }, {
          "$ref" : "#/parameters/limitParam"
        }, {
          "in" : "query",
          "name" : "filing-status",
          "type" : "string",
          "description" : "A search option to narrow down the confirmation statement periods returned - options include filed, missing and all",
          "required" : false
        }, {
          "in" : "query",
          "name" : "start-on",
          "type" : "string",
          "format" : "date",
          "description" : "The earliest date of the range to search for confirmation statement periods",
          "required" : false
        }, {
          "in" : "query",
          "name" : "end-on",
          "type" : "string",
          "format" : "date",
          "description" : "The last date of the range to search for confirmation statement periods",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a list of confirmation statement periods",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConfirmationStatementPeriod"
              }
            }
          },
          "404" : {
            "description" : "confirmation statement periods not found"
          }
        }
      }
    },
    "/transactions" : {
      "get" : {
        "summary" : "getTransactionsForCompanyByDateDescending",
        "x-operationName" : "Get",
        "description" : "Return transactions for a company ordered by the date the transaction was registered",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "offset",
          "type" : "string",
          "description" : "The offset showing the number of transaction records to skip before returning transactions",
          "required" : false
        }, {
          "in" : "query",
          "name" : "limit",
          "type" : "string",
          "description" : "The limit giving the number of transaction records to return",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a list of transactions",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          },
          "400" : {
            "description" : "Bad request - limit cannot be less than 1"
          },
          "404" : {
            "description" : "transactions not found"
          }
        }
      }
    },
    "/transactions/{transaction_number}" : {
      "get" : {
        "summary" : "getTransactionById",
        "x-operationName" : "Get",
        "description" : "Return the transaction with the provided transaction number",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transaction_number",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the transaction",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully return a transaction",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          },
          "404" : {
            "description" : "Transaction not found"
          }
        }
      }
    }
  },
  "definitions" : {
    "Company" : {
      "type" : "object",
      "title" : "Company",
      "properties" : {
        "incorporation_number" : {
          "description" : "The company number given to the company when it was registered with Companies House",
          "type" : "string"
        },
        "incorporation_date" : {
          "description" : "The date the company was registered with Companies House",
          "type" : "string",
          "format" : "date"
        },
        "name" : {
          "description" : "The name of the company",
          "type" : "string"
        },
        "registered_office_address" : {
          "description" : "The correspondence address for the company",
          "$ref" : "#/definitions/Address"
        },
        "trading_status" : {
          "description" : "The trading status of the company - includes Trading, Dormant, Dissolved, Closed etc",
          "type" : "string"
        },
        "company_type" : {
          "description" : "The type of company - includes Limited, Public Limited, Limited Partnerships etc",
          "type" : "string"
        },
        "links" : {
          "type" : "object",
          "properties" : {
            "self" : {
              "type" : "string"
            },
            "registered_office_address" : {
              "type" : "string"
            }
          }
        }
      },
      "required" : [ "company_name", "incorporation_number", "incorporation_date", "registered_office_address" ]
    },
    "Appointment" : {
      "type" : "object",
      "title" : "Appointment",
      "properties" : {
        "date_appointed_on" : {
          "description" : "The date the appointment was made to the company",
          "type" : "string",
          "format" : "date"
        },
        "date_terminated_on" : {
          "description" : "The date the appointment resigned from the company",
          "type" : "string",
          "format" : "date"
        },
        "officer_id" : {
          "description" : "The officer ID number as held in the CHIPS database",
          "type" : "string"
        },
        "person_officer_details" : {
          "description" : "The appointment details for a person",
          "$ref" : "#/definitions/PersonOfficerDetails"
        },
        "company_officer_details" : {
          "description" : "The appointment details for a company",
          "$ref" : "#/definitions/CompanyOfficerDetails"
        },
        "is_corporate_appointment" : {
          "description" : "Flag to identify if the appointment is a company (true) or a person (false)",
          "type" : "boolean"
        },
        "service_address" : {
          "description" : "The correspondence address provided for this appointment",
          "$ref" : "#/definitions/Address"
        },
        "appointment_type" : {
          "description" : "The type of appointment - appointment types defined in the appointment-type enum ",
          "type" : "string"
        },
        "links" : {
          "type" : "object",
          "properties" : {
            "self" : {
              "type" : "string"
            }
          }
        }
      },
      "required" : [ "date_appointed_on", "date_terminated_on", "officer_id", "service_address", "is_corporate_director", "appointment_type" ]
    },
    "PersonOfficerDetails" : {
      "type" : "object",
      "title" : "PersonDetails",
      "properties" : {
        "title" : {
          "description" : "The title for the officer on the appointment",
          "type" : "string"
        },
        "forename" : {
          "description" : "The forename of the officer on the appointment",
          "type" : "string"
        },
        "middlename" : {
          "description" : "The middle name(s) of the officer on the appointment",
          "type" : "string"
        },
        "surname" : {
          "description" : "The surname of the officer on the appointment",
          "type" : "string"
        },
        "date_of_birth" : {
          "description" : "The date of birth of the officer on the appointment",
          "type" : "string",
          "format" : "date"
        }
      },
      "required" : [ "forename", "surname", "date_of_birth" ]
    },
    "CompanyOfficerDetails" : {
      "type" : "object",
      "title" : "CompanyDetails",
      "properties" : {
        "company_name" : {
          "description" : "The company name of the officer on the appointment",
          "type" : "string"
        }
      },
      "required" : [ "company_name" ]
    },
    "AccountingPeriod" : {
      "type" : "object",
      "title" : "AccountingPeriod",
      "properties" : {
        "date_due_on" : {
          "description" : "The date that the accounts should have been filed by",
          "type" : "string",
          "format" : "date"
        },
        "date_covered_up_to" : {
          "description" : "The date that the accounts cover up to",
          "type" : "string",
          "format" : "date"
        },
        "links" : {
          "type" : "object",
          "properties" : {
            "self" : {
              "type" : "string"
            }
          }
        }
      },
      "required" : [ "period_type", "date_due_on", "date_covered_up_to" ]
    },
    "AnnualReturnPeriod" : {
      "type" : "object",
      "title" : "AnnualReturnPeriod",
      "properties" : {
        "date_due_on" : {
          "description" : "The date that the annual return should have been filed by",
          "type" : "string",
          "format" : "date"
        },
        "date_covered_up_to" : {
          "description" : "The date that the annual return covers up to",
          "type" : "string",
          "format" : "date"
        },
        "links" : {
          "type" : "object",
          "properties" : {
            "self" : {
              "type" : "string"
            }
          }
        }
      },
      "required" : [ "period_type", "filing_date_due_on", "date_covered_up_to" ]
    },
    "ConfirmationStatementPeriod" : {
      "type" : "object",
      "title" : "ConfirmationStatementPeriod",
      "properties" : {
        "date_due_on" : {
          "description" : "The date that the confirmation statement should have been filed by",
          "type" : "string",
          "format" : "date"
        },
        "date_covered_up_to" : {
          "description" : "The date the Confirmation statement covers up to",
          "type" : "string",
          "format" : "date"
        },
        "links" : {
          "type" : "object",
          "properties" : {
            "self" : {
              "type" : "string"
            }
          }
        }
      },
      "required" : [ "period_type", "filing_date_due_on", "date_covered_on_to" ]
    },
    "Address" : {
      "type" : "object",
      "title" : "Address",
      "properties" : {
        "house_name_number" : {
          "description" : "The house name or number of the property",
          "type" : "string"
        },
        "street" : {
          "description" : "The street for the address",
          "type" : "string"
        },
        "area" : {
          "description" : "The area for the address",
          "type" : "string"
        },
        "region" : {
          "description" : "The region for the address",
          "type" : "string"
        },
        "town" : {
          "description" : "The town for the address",
          "type" : "string"
        },
        "country" : {
          "description" : "The country for the address",
          "type" : "string"
        },
        "postcode" : {
          "description" : "The postcode for the address",
          "type" : "string"
        }
      },
      "required" : [ "address_line_1", "postcode" ]
    },
    "Transaction" : {
      "type" : "object",
      "title" : "Transaction",
      "properties" : {
        "transaction_registered_on" : {
          "description" : "The date that the transaction was registered/last modified within Companies House",
          "type" : "string",
          "format" : "date"
        },
        "description" : {
          "description" : "The text describing the transaction",
          "type" : "string"
        },
        "transaction_type" : {
          "description" : "The type of the transaction, including form types and CH actions e.g. CH01, CS01, Passed to prosecution",
          "type" : "string"
        },
        "transaction_status" : {
          "description" : "The status of the transaction including issued, accepted, received, rejected",
          "type" : "string"
        },
        "links" : {
          "type" : "object",
          "properties" : {
            "self" : {
              "type" : "string"
            }
          }
        }
      },
      "required" : [ "transaction_registered_on", "description", "transaction_type", "transaction_status" ]
    }
  }
}
